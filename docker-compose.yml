version: "3"
services:
  livemap-rest:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: livebus:v2
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - zookeeper
    environment:
      - bootstrap_servers=kafka:9092
      - topicname=LiveBusData
      - debugger=True
#    networks:
#      - backend
    command: "sh run.sh"

  livemap-producer:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: livebus:v2
    depends_on:
      - zookeeper
    restart: always
    environment:
      - bootstrap_servers=kafka:9092
      - topicname=LiveBusData
      - debugger=True
#    networks:
#      - backend
    command: "python start_producers.py"


  zookeeper:
    image: "wurstmeister/zookeeper:latest"
    ports:
      - "2181:2181"
#    networks:
#      - backend


  kafka:
    image: "wurstmeister/kafka:2.12-2.2.0"
    restart: unless-stopped
    ports:
      - "9092:9092"
    links:
      - zookeeper:zookeeper
    environment:
      KAFKA_CREATE_TOPICS: "LiveBusData"
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: "60000"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - backend
networks:
  default:
    driver: bridge

#volumes:
#  db_data:
#    driver: local


#  nginx:
#    container_name: nginx
#    restart: always
#    build: ./nginx
#    ports:
#      - "80:80"
#    depends_on:
#      - cmm-rest
